1. 객체와 클래스에 대한 설명으로 틀린 것은 무엇입니까?

➊ 클래스는 객체를 생성하기 위한 설계도(청사진)와 같은 것이다. 
➋ new 연산자로 클래스의 생성자를 호출함으로써 객체가 생성된다. 
➌ 하나의 클래스로 하나의 객체만 생성할 수 있다.
➍ 객체는 클래스의 인스턴스이다.

답 : 3
-------------------------------------------------------------------------
2. 클래스의 구성 멤버가 아닌 것은 무엇입니까?

➊ 필드(field)
➋ 생성자(constructor)
➌ 메소드(method)
➍ 로컬 변수(local variable)

답 : 4
-------------------------------------------------------------------------
3. 필드, 생성자, 메소드에 대한 설명으로 틀린 것은 무엇입니까?

➊ 필드는 객체의 데이터를 저장한다.
➋ 생성자는 객체의 초기화를 담당한다.
➌ 메소드는 객체의 동작 부분으로, 실행 코드를 가지고 있는 블록이다. 
➍ 클래스는 반드시 필드와 메소드를 가져야 한다.

답 : 4
-------------------------------------------------------------------------
4. 필드에 대한 설명으로 틀린 것은 무엇입니까? 

➊ 필드는 메소드에서 사용할 수 있다. 
➋ 인스턴스 필드 초기화는 생성자에서 할 수 있다.
➌ 필드는 반드시 생성자 선언 전에 선언되어야 한다.
➍ 필드는 초기값을 주지 않더라도 기본값으로 자동 초기화된다.

답 : 3
-------------------------------------------------------------------------
5. 생성자에 대한 설명으로 틀린 것은 무엇입니까?

➊ 객체를 생성하려면 생성자 호출이 반드시 필요한 것은 아니다.
➋ 생성자는 다른 생성자를 호출하기 위해 this()를 사용할 수 있다.
➌ 생성자가 선언되지 않으면 컴파일러가 기본 생성자를 추가한다.
➍ 외부에서 객체를 생성할 수 없도록 생성자에 private 접근 제한자를 붙일 수 있다.

답 : 1
-------------------------------------------------------------------------
6. 메소드에 대한 설명으로 틀린 것은 무엇입니까?

➊ 리턴값이 없는 메소드는 리턴 타입을 void로 해야 한다.
➋ 리턴 타입이 있는 메소드는 리턴값을 지정하기 위해 반드시 return 문이 있어야 한다. 
➌ 매개값의 수를 모를 경우 “...”를 이용해서 매개변수를 선언할 수 있다.
➍ 메소드의 이름은 중복해서 선언할 수 없다.

답 : 4
-------------------------------------------------------------------------
7. 메소드 오버로딩에 대한 설명으로 틀린 것은 무엇입니까?

➊ 동일한 이름의 메소드를 여러 개 선언하는 것을 말한다. 
➋ 반드시 리턴 타입이 달라야 한다.
➌ 매개변수의 타입, 수, 순서를 다르게 선언해야 한다. 
➍ 매개값의 타입 및 수에 따라 호출될 메소드가 선택된다.

답 : 2
-------------------------------------------------------------------------
8. 인스턴스 멤버와 정적 멤버에 대한 설명으로 틀린 것은 무엇입니까? 

➊ 정적 멤버는 static으로 선언된 필드와 메소드를 말한다. 
➋ 인스턴스 필드는 생성자 및 정적 블록에서 초기화될 수 있다. 
➌ 정적필드와 정적메소드는 객체 생성없이 클래스를 통해 접근할 수 있다. 
➍ 인스턴스 필드와 메소드는 객체를 생성하고 사용해야 한다.

답 : 2
-------------------------------------------------------------------------
9. final 필드와 상수(static final)에 대한 설명으로 틀린 것은 무엇입니까?

➊ final 필드와 상수는 초기값이 저장되면 값을 변경할 수 없다. 
➋ final 필드와 상수는 생성자에서 초기화될 수 있다.
➌ 상수의 이름은 대문자로 작성하는 것이 관례이다. 
➍ 상수는 객체 생성없이 클래스를 통해 사용할 수 있다.

답 : 2
-------------------------------------------------------------------------
10. 패키지에 대한 설명으로 틀린 것은 무엇입니까?

➊ 패키지는 클래스들을 그룹화시키는 기능을 한다.
➋ 클래스가 패키지에 소속되려면 패키지 선언을 반드시 해야 한다.
➌ import 문은 다른 패키지의 클래스를 사용할 때 필요하다.
➍ com.mycom 패키지에 소속된 클래스는 com.yourcom에 옮겨 놓아도 동작한다.

답 : 4
-------------------------------------------------------------------------
11. 접근 제한에 대한 설명으로 틀린 것은 무엇입니까?

➊ 접근 제한자는 클래스, 필드, 생성자, 메소드의 사용을 제한한다. 
➋ public 접근 제한은 아무런 제한없이 해당 요소를 사용할 수 있게 한다. 
➌ default 접근 제한은 해당 클래스 내부에서만 사용을 허가한다.
➍ 외부에서 접근하지 못하도록 하려면 private 접근 제한을 해야 한다.

답 : 3
-------------------------------------------------------------------------
12.다음클래스에서해당멤버가필드,생성자,메소드중어떤것인지 ( ) 안에적어보세요.
		public class Member {
			private String name;								->   (		필드		 ) 
			public Member(String name) { ... }   			 	->   (		생성자		 ) 
			public void setName(String name) { ... }  			->   ( 		메소드	 	 )
		}

		