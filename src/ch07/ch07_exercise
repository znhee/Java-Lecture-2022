1. 자바의 상속에 대한 설명 중 틀린 것은 무엇입니까?

➊ 자바는 다중 상속을 허용한다.
➋ 부모의 메소드를 자식 클래스에서 재정의(오버라이딩)할 수 있다.
➌ 부모의 private 접근 제한을 갖는 필드와 메소드는 상속의 대상이 아니다. 
➍ final 클래스는 상속할 수 없고, final 메소드는 오버라이딩할 수 없다.

답 : 
-------------------------------------------------------------------------
2. 클래스 타입 변환에 대한 설명 중 틀린 것은 무엇입니까?

➊ 자식 객체는 부모 타입으로 자동 타입 변환된다. 
➋ 부모 객체는 어떤 자식 타입으로도 강제 타입 변환된다.
➌ 자동 타입 변환을 이용해서 필드와 매개변수의 다형성을 구현한다.
➍ 강제 타입 변환 전에 instanceof 연산자로 변환 가능한지 검사하는 것이 좋다.

답 : 
-------------------------------------------------------------------------
3. final 키워드에 대한 설명으로 틀린 것은 무엇입니까?
➊ final 클래스는 부모 클래스로 사용할 수 있다. 
➋ final 필드는 초기화된 후에는 변경할 수 없다. 
➌ final 메소드는 재정의(오버라이딩)할 수 없다. 
➍ static final 필드는 상수를 말한다.

답 : 
-------------------------------------------------------------------------
4. 오버라이딩(Overriding)에 대한 설명으로 틀린 것은 무엇입니까?

➊ 부모 메소드의 시그너처(리턴 타입, 메소드명, 매개변수)와 동일해야 한다.
➋ 부모 메소드보다 좁은 접근 제한자를 붙일 수 없다.(예: public (부모)  private (자식) ). 
➌ @Override 어노테이션을 사용하면 재정의가 확실한지 컴파일러가 검증한다.
➍ protected 접근 제한을 갖는 메소드는 다른 패키지의 자식 클래스에서 재정의할 수 없다.

답 : 
-------------------------------------------------------------------------
5. 추상 클래스에 대한 설명으로 틀린 것은 무엇입니까?
➊ 직접 객체를 생성할 수 없고, 상속만 할 수 있다.
➋ 추상 메소드를 반드시 가져야 한다.
➌ 추상 메소드는 자식 클래스에서 재정의(오버라이딩)할 수 있다.
➍ 추상 메소드를 재정의하지 않으면 자식 클래스도 추상 클래스가 되어야 한다.

답 : 
-------------------------------------------------------------------------
6. Parent 클래스를 상속해서 Child 클래스를 다음과 같이 작성했는데, Child 생성자에서 컴파일 에러가 발생했습니다. 
그 이유와 해결 방법을 설명해보세요.

		<Parent class> 												<Child class>
	public class Parent { 					|			public class Child extends Parent {
		public String name;					|				public int studentNo;
		public Parent(String name) { 		|				public Child(String name, int studentNo) {
			this.name = name;				|					this.name = name;
		} 									|					this.studentNo = studentNo; }
	}										|				}

답 : 
-------------------------------------------------------------------------
7. Parent 클래스를 상속받아 Child 클래스를 다음과 같이 작성했습니다. 
ChildExample 클래스를 실행했을 때 호출되는 각 클래스의 생성자의 순서를 생각하면서 출력 결과를 작성해보세요.

답 : 
-------------------------------------------------------------------------
8. Tire 클래스를 상속받아 SnowTire 클래스를 다음과 같이 작성했습니다. 
SnowTireExample 클래스를 실행했을 때 출력 결과를 작성해보세요.

답 : 
-------------------------------------------------------------------------
9. A, B, C, D, E, F 클래스가 다음과 같이 상속 관계에 있을 때 다음 빈칸에 들어올 수 없는 코드를 선택하세요.

➊ new B ( )			 ➌ new D ( )
➋ (B ) new A ( ) 		 ➍ new E ( )

답 : 
-------------------------------------------------------------------------
10. 다음과 같이 작성한 Computer 클래스에서 컴파일 에러가 발생했습니다. 그 이유를 설명해보세요.

	public abstract class Machine { 
		public void powerOn() { } 
		public void powerOff() { } 
		public abstract void work();
	}
	public class Computer extends Machine { 
	}
	
답 : 
-------------------------------------------------------------------------
11. MainActivity의 onCreate ( )를 실행할 때 Activity의 onCreate ( )도 실행시키고 싶습니다. 밑줄에 들어갈 코드를 작성해보세요.

답 : 
-------------------------------------------------------------------------
12. 다음과 같은 Example 클래스에서 action ( ) 메소드를 호출할 때 매개값이 C 객체일 경우에만 method2 ( )가 호출되도록 밑줄에 들어갈 코드를 작성해보세요.

답 : 
-------------------------------------------------------------------------